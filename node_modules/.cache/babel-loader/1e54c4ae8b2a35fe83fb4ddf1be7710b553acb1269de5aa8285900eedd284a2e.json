{"ast":null,"code":"var _jsxFileName = \"/Users/muretimartin/GitHub/Marto/github_api_tutotial/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [avatarURL, setAvatarURL] = useState();\n  const [githubUsername, setGitHubUsername] = useState();\n  const [repoData, setRepoData] = useState();\n  async function repoDataURL() {\n    //Get repo data about github user\n    await fetch(\"https://api.github.com/users/MuretiMartin/repos\").then(res => res.json()).then(result => {\n      console.log(36, result);\n      const list = result.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: item.svn_url,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this));\n      setRepoData(list);\n    }, error => {\n      console.log(error);\n    });\n  }\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/MuretiMartin\").then(res => res.json()).then(result => {\n      console.log(result);\n      setAvatarURL(result.avatar_url);\n      setGitHubUsername(result.login);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: avatarURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: githubUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: repoDataURL,\n          children: \"List my public repos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), repoData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ughRx6OkjwgO0CIYz73CFaVZInU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","Card","Button","jsxDEV","_jsxDEV","App","_s","avatarURL","setAvatarURL","githubUsername","setGitHubUsername","repoData","setRepoData","repoDataURL","fetch","then","res","json","result","console","log","list","map","item","className","children","target","href","svn_url","name","fileName","_jsxFileName","lineNumber","columnNumber","error","avatar_url","login","style","width","Img","variant","src","Body","Title","onClick","_c","$RefreshReg$"],"sources":["/Users/muretimartin/GitHub/Marto/github_api_tutotial/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction App() {\n  const [avatarURL, setAvatarURL] = useState();\n  const [githubUsername, setGitHubUsername] = useState();\n  const [repoData, setRepoData] = useState();\n\n  async function repoDataURL() {\n    //Get repo data about github user\n    await fetch(\"https://api.github.com/users/MuretiMartin/repos\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(36, result);\n          const list = result.map((item) => (\n            <div className=\"text-center\">\n              <a target=\"_blank\" href={item.svn_url}>\n                {item.name}\n              </a>\n            </div>\n          ));\n          setRepoData(list);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/MuretiMartin\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setAvatarURL(result.avatar_url);\n          setGitHubUsername(result.login);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n  return (\n    <div className=\"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant=\"top\" src={avatarURL} />\n        <Card.Body>\n          <Card.Title>{githubUsername}</Card.Title>\n\n          <Button variant=\"primary\" onClick={repoDataURL}>\n            List my public repos!\n          </Button>\n        </Card.Body>\n      </Card>\n      {repoData}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}